import pandas as pd
import matplotlib.pyplot as plt
from matplotlib.backends.backend_pdf import PdfPages
import json

# üìä –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ –≥—Ä–∞—Ñ–∏–∫–∞ (Plotly)
def get_plot_data():
    try:
        btc_df = pd.read_csv("BTCUSDT_volatility.csv")
        eth_df = pd.read_csv("ETHUSDT_volatility.csv")
        sp_df = pd.read_csv("S&P500_volatility.csv")
    except FileNotFoundError as e:
        print(f"‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω —Ñ–∞–π–ª: {e.filename}")
        return None

    # üß© –û—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –æ–±—â–∏–µ –¥–∞—Ç—ã (—á—Ç–æ–±—ã –≥—Ä–∞—Ñ–∏–∫–∏ —Å–æ–≤–ø–∞–¥–∞–ª–∏)
    common_dates = set(btc_df["date"]) & set(eth_df["date"]) & set(sp_df["date"])
    btc_df = btc_df[btc_df["date"].isin(common_dates)].copy()
    eth_df = eth_df[eth_df["date"].isin(common_dates)].copy()
    sp_df  = sp_df[sp_df["date"].isin(common_dates)].copy()

    # ‚è≥ –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ –¥–∞—Ç–µ
    for df in [btc_df, eth_df, sp_df]:
        df["date"] = pd.to_datetime(df["date"])
        df.sort_values("date", inplace=True)

    # üì§ –í–æ–∑–≤—Ä–∞—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ Plotly
    return json.dumps([
        {
            "x": btc_df["date"].dt.strftime("%Y-%m-%d").tolist(),
            "y": btc_df["percent_change"].tolist(),
            "type": "scatter",
            "mode": "lines+markers",
            "name": "BTCUSDT"
        },
        {
            "x": eth_df["date"].dt.strftime("%Y-%m-%d").tolist(),
            "y": eth_df["percent_change"].tolist(),
            "type": "scatter",
            "mode": "lines+markers",
            "name": "ETHUSDT"
        },
        {
            "x": sp_df["date"].dt.strftime("%Y-%m-%d").tolist(),
            "y": sp_df["percent_change"].tolist(),
            "type": "scatter",
            "mode": "lines+markers",
            "name": "S&P500"
        }
    ])

# üìÑ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è PDF –æ—Ç—á—ë—Ç–∞
def generate_pdf_report():
    try:
        btc_df = pd.read_csv("BTCUSDT_volatility.csv")
        eth_df = pd.read_csv("ETHUSDT_volatility.csv")
        sp_df = pd.read_csv("S&P500_volatility.csv")
    except FileNotFoundError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω ‚Äî {e.filename}")
        return

    # üìÖ –û—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –æ–±—â–∏–µ –¥–∞—Ç—ã
    common_dates = set(btc_df["date"]) & set(eth_df["date"]) & set(sp_df["date"])
    btc_df = btc_df[btc_df["date"].isin(common_dates)].copy()
    eth_df = eth_df[eth_df["date"].isin(common_dates)].copy()
    sp_df  = sp_df[sp_df["date"].isin(common_dates)].copy()

    # ‚è≥ –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –¥–∞—Ç–µ
    for df in [btc_df, eth_df, sp_df]:
        df["date"] = pd.to_datetime(df["date"])
        df.sort_values("date", inplace=True)

    # üñ®Ô∏è –†–∏—Å—É–µ–º –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ PDF
    with PdfPages("crypto_volatility_report.pdf") as pdf:
        plt.figure(figsize=(12, 6))

        plt.plot(btc_df["date"], btc_df["percent_change"], label="BTCUSDT", marker="o")
        plt.plot(eth_df["date"], eth_df["percent_change"], label="ETHUSDT", marker="o")
        plt.plot(sp_df["date"],  sp_df["percent_change"],  label="S&P500",  marker="o")

        plt.xlabel("–î–∞—Ç–∞")
        plt.ylabel("–ò–∑–º–µ–Ω–µ–Ω–∏–µ (%)")
        plt.title("üìä –î–∏–Ω–∞–º–∏–∫–∞ –¥–Ω–µ–≤–Ω–æ–π –≤–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç–∏")
        plt.xticks(rotation=45)
        plt.grid(True)
        plt.legend()

        pdf.savefig()
        plt.close()

    print("‚úÖ PDF-–æ—Ç—á—ë—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω: crypto_volatility_report.pdf")






