
import logging
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes
from analysis_core import run_volatility_analysis

# –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ (–ø–æ –∂–µ–ª–∞–Ω–∏—é)
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)

# –í–∞—à —Ç–æ–∫–µ–Ω –æ—Ç BotFather (–∑–∞–º–µ–Ω–∏ –Ω–∏–∂–µ –Ω–∞ —Å–≤–æ–π)
BOT_TOKEN = "7412973245:AAFZPDESRY-hWFt5M0YGyxrhjNJM3rA0oQ4"

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        """–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –≤–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç–∏. –û—Ç–ø—Ä–∞–≤—å –æ–¥–Ω—É –∏–∑ –∫–æ–º–∞–Ω–¥:
/analyze_5
/analyze_10
/analyze_30
/analyze_90"""
    )

# –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∞–Ω–∞–ª–∏–∑–∞
async def analyze(update: Update, context: ContextTypes.DEFAULT_TYPE, days: int):
    await update.message.reply_text(f"üîç –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –≤–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç—å –∑–∞ {days} –¥–Ω–µ–π...")

    crypto_results, sp500_result = run_volatility_analysis(days)

    response = f"üìä <b>–í–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç—å –∑–∞ {days} –¥–Ω–µ–π:</b>\n\n"

    for coin in crypto_results:
        response += f"<b>{coin['symbol']}</b> ‚Äî {coin['average_volatility_points']:.1f} –ø—É–Ω–∫—Ç–æ–≤, {coin['average_volatility_percent']:.2f}%\n"

    response += f"<b>{sp500_result['symbol']}</b> ‚Äî {sp500_result['average_volatility_points']:.1f} –ø—É–Ω–∫—Ç–æ–≤, {sp500_result['average_volatility_percent']:.2f}%\n"

    response += "\nüìå –í—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å:\n/analyze_5  /analyze_10  /analyze_30  /analyze_90"

    await update.message.reply_text(response, parse_mode="HTML")

# –°–æ–∑–¥–∞—ë–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
def main():
    app = ApplicationBuilder().token(BOT_TOKEN).build()

    app.add_handler(CommandHandler("start", start))

    for d in [5, 10, 30, 90]:
        app.add_handler(CommandHandler(f"analyze_{d}", lambda u, c, d=d: analyze(u, c, d)))

    print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω")
    app.run_polling()

if __name__ == "__main__":
    main()
